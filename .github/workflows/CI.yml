name: CI

on:
  push:
    branches:
      - 'master'
    tags:
      - '*'

jobs:
  lint:
    name: Linting
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Setup Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Run setup poetry
        run: |
          pip install -U poetry
          poetry check
          poetry install
          poetry show
      - name: Run flake8
        run: poetry run flake8
      - name: Run black
        run: poetry run black -l 120 --check .
      - name: Run isort
        run: poetry run isort --check --line-length 120 --profile black .

#  type_check:
#    name: Type Checking
#    runs-on: ubuntu-latest
#    timeout-minutes: 15
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#        with:
#          submodules: true
#      - name: Setup Python 3.8
#        uses: actions/setup-python@v2
#        with:
#          python-version: 3.8
#      - name: Run setup poetry
#        run: |
#          pip install -U poetry
#          poetry check
#          poetry install
#          poetry show
#      - name: Run mypy
#        run: poetry run mypy sanic_openid_connect_provider

  publish:
    name: Publish
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    # needs: [type_check, lint]
    needs: [lint]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Setup Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Run setup poetry
      run: |
        pip install -U poetry poetry-dynamic-versioning
    - name: Build dist
      run: |
        poetry build
    - name: Publish
      env:
        POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
      run: |
        poetry publish